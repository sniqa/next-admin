// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  username String  @unique @default("")
  account  String? @default("")
  password String? @default("")

  department String? @default("")

  authorization Authorization?

  device       Device[]
  ips          IpAddress[]
  
  workflow     Workflow[]
  workflowTemp WorkflowTemp[]
  workflowNode WorkflowNode[]

  description String? @default("") 
  remark      String? @default("")
  createAt    DateTime @default(now())
  updateAt    DateTime @default(now()) @updatedAt
}

model Authorization {
  id   String  @id @default(auto()) @map("_id") @db.ObjectId
  role String?

  users  User   @relation(fields: [userId], references: [id])
  userId String @unique @db.ObjectId

  description String? @default("") 
  remark      String? @default("")
  createAt    DateTime @default(now())
  updateAt    DateTime @default(now()) @updatedAt
}

model Network {
  id   String      @id @default(auto()) @map("_id") @db.ObjectId
  name String      @unique
  cidr String[]    @default([])
  isAllowEmptyValue Boolean @default(false)
  ips  IpAddress[]

  description String? @default("") 
  remark      String?  @default("")
  createAt    DateTime @default(now())
  updateAt    DateTime @default(now()) @updatedAt
}

model IpAddress {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  ip        String
  network   Network @relation(fields: [networkId], references: [id], onDelete: Cascade)
  networkId String  @db.ObjectId
  status    Int     @default(0)

  device Device?

  user   User?   @relation(fields: [userId], references: [id], onUpdate: Cascade)
  userId String? @db.ObjectId

  description String? @default("")
  remark      String? @default("")
  createAt    DateTime @default(now())
  updateAt    DateTime @default(now()) @updatedAt
}






model Device {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  serialNumber  String  @unique @default("")
  productNumber String? @unique @default("")
  displaySerialNumber        String? @default("")
  name          String? @default("")
  location      String? @default("")
  mac           String? @unique @default("")
  diskSerialNumber        String? @default("")
 
  deviceHistory  DeviceHistory?

  deviceStatus   DeviceStatus? @relation(fields: [deviceStatusId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  deviceStatusId String? @db.ObjectId

  user   User?   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  userId String? @db.ObjectId

  deviceModel   DeviceModel? @relation(fields: [deviceModelId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  deviceModelId String?      @unique @db.ObjectId

  ipAddress   IpAddress? @relation(fields: [ipAddressId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  ipAddressId String?    @unique @db.ObjectId

  description String? @default("")
  remark      String? @default("")
  createAt    DateTime @default(now())
  updateAt    DateTime @default(now()) @updatedAt
}

model DeviceHistory {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId

  device Device @relation(fields: [deviceId], references: [id],onUpdate: Cascade)
  deviceId String @db.ObjectId @unique


  data String @default("")
 
  description String? @default("")
  remark      String? @default("")
  createAt    DateTime @default(now())
  updateAt    DateTime @default(now()) @updatedAt
}

model DeviceModel {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  model    String  @unique
  name     String? @default("")
  type     String? @default("")
  category String? @default("")

  device Device[]

  description String? @default("")
  remark      String? @default("")
  createAt    DateTime @default(now())
  updateAt    DateTime @default(now()) @updatedAt
}


model DeviceStatus {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  status      String @unique

  device Device[]

  description String? @default("")
  remark      String? @default("")
  createAt    DateTime @default(now())
  updateAt    DateTime @default(now()) @updatedAt
}

model Workflow {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  title   String?
  content String?

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @db.ObjectId

  workflowTemp   WorkflowTemp @relation(fields: [workflowTempId], references: [id])
  workflowTempId String       @db.ObjectId

  description String? @default("")
  remark      String? @default("")
  createAt DateTime @default(now())
  updateAt DateTime @default(now()) @updatedAt
}

model WorkflowTemp {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @db.ObjectId

  workflow Workflow[]

  workflowNode WorkflowNode[]

  description String? @default("")
  remark      String? @default("")
  createAt DateTime @default(now())
  updateAt DateTime @default(now()) @updatedAt
}

model WorkflowNode {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  deep Int @default(1)

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  action Int @default(0)

  workflowTemp   WorkflowTemp @relation(fields: [workflowTempId], references: [id])
  workflowTempId String       @db.ObjectId

  description String? @default("")
  remark      String? @default("")
  createAt DateTime @default(now())
  updateAt DateTime @default(now()) @updatedAt
}
